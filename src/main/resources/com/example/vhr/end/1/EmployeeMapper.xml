<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.vhr.end.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.example.vhr.end.model.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="idCard" jdbcType="CHAR" property="idcard" />
    <result column="wedlock" jdbcType="CHAR" property="wedlock" />
    <result column="nationId" jdbcType="INTEGER" property="nationid" />
    <result column="nativePlace" jdbcType="VARCHAR" property="nativeplace" />
    <result column="politicId" jdbcType="INTEGER" property="politicid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentid" />
    <result column="jobLevelId" jdbcType="INTEGER" property="joblevelid" />
    <result column="posId" jdbcType="INTEGER" property="posid" />
    <result column="engageForm" jdbcType="VARCHAR" property="engageform" />
    <result column="tiptopDegree" jdbcType="CHAR" property="tiptopdegree" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="beginDate" jdbcType="DATE" property="begindate" />
    <result column="workState" jdbcType="CHAR" property="workstate" />
    <result column="workID" jdbcType="CHAR" property="workid" />
    <result column="contractTerm" jdbcType="DOUBLE" property="contractterm" />
    <result column="conversionTime" jdbcType="DATE" property="conversiontime" />
    <result column="notWorkDate" jdbcType="DATE" property="notworkdate" />
    <result column="beginContract" jdbcType="DATE" property="begincontract" />
    <result column="endContract" jdbcType="DATE" property="endcontract" />
    <result column="workAge" jdbcType="INTEGER" property="workage" />
  </resultMap>
  <resultMap id="AllEmployeeInfo" type="com.example.vhr.end.model.Employee" extends="BaseResultMap">
    <association property="nation" javaType="com.example.vhr.end.model.Nation">
      <id column="nid" property="id"/>
      <result column="nname" property="name"/>
    </association>
    <association property="politicsstatus" javaType="com.example.vhr.end.model.Politicsstatus">
      <id column="pid" property="id"/>
      <result column="pname" property="name"/>
    </association>
    <association property="department" javaType="com.example.vhr.end.model.Department">
      <id column="did" property="id"/>
      <result column="dname" property="name"/>
    </association>
    <association property="joblevel" javaType="com.example.vhr.end.model.Joblevel">
      <id column="jid" property="id"/>
      <result column="jname" property="name"/>
    </association>
    <association property="position" javaType="com.example.vhr.end.model.Position">
      <id column="posid" property="id"/>
      <result column="posname" property="name"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, 
    email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, 
    specialty, school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
  <select id="getAllEmployeeById" resultMap="AllEmployeeInfo">
        select e.*,p.`id` as pid,p.`name` as pname,n.`id` as nid,n.`name` as nname,d.`id` as did,d.`name` as
        dname,j.`id` as jid,j.`name` as jname,pos.`id` as posid,pos.`name` as posname from employee e,nation
        n,politicsstatus p,department d,joblevel j,position pos where e.`nationId`=n.`id` and e.`politicId`=p.`id` and
        e.`departmentId`=d.`id` and e.`jobLevelId`=j.`id` and e.`posId`=pos.`id` and e.`id`=#{id}
  </select>
  <select id="getEmployeeByPage" resultMap="AllEmployeeInfo">
    select e.*,p.`id` as pid,p.`name` as pname,n.`id` as nid,n.`name` as nname,d.`id` as did,d.`name` as
    dname,j.`id` as jid,j.`name` as jname,pos.`id` as posid,pos.`name` as posname from employee e,nation
    n,politicsstatus p,department d,joblevel j,position pos where e.`nationId`=n.`id` and e.`politicId`=p.`id` and
    e.`departmentId`=d.`id` and e.`jobLevelId`=j.`id` and e.`posId`=pos.`id`
    <if test="emp.name !=null and emp.name!=''">
      and e.name like concat('%',#{emp.name},'%')
    </if>
    <if test="emp.politicId !=null">
      and e.politicId =#{emp.politicId}
    </if>
    <if test="emp.nationId !=null">
      and e.nationId =#{emp.nationId}
    </if>
    <if test="emp.departmentId !=null">
      and e.departmentId =#{emp.departmentId}
    </if>
    <if test="emp.jobLevelId !=null">
      and e.jobLevelId =#{emp.jobLevelId}
    </if>
    <if test="emp.engageForm !=null and emp.engageForm!=''">
      and e.engageForm =#{emp.engageForm}
    </if>
    <if test="emp.posId !=null">
      and e.posId =#{emp.posId}
    </if>
    <if test="beginDateScope !=null">
      and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
    <if test="page !=null and size!=null">
      limit #{page},#{size}
    </if>
  </select>
  <select id="getTotal" resultType="java.lang.Long">
  select count(*) from employee e
  <where>
    <if test="emp!=null">
      <if test="emp.name !=null and emp.name!=''">
        and e.name like concat('%',#{emp.name},'%')
      </if>
      <if test="emp.politicId !=null">
        and e.politicId =#{emp.politicId}
      </if>
      <if test="emp.nationId !=null">
        and e.nationId =#{emp.nationId}
      </if>
      <if test="emp.jobLevelId !=null">
        and e.jobLevelId =#{emp.jobLevelId}
      </if>
      <if test="emp.departmentId !=null">
        and e.departmentId =#{emp.departmentId}
      </if>
      <if test="emp.engageForm !=null and emp.engageForm!=''">
        and e.engageForm =#{emp.engageForm}
      </if>
      <if test="emp.posId !=null">
        and e.posId =#{emp.posId}
      </if>
    </if>
    <if test="beginDateScope !=null">
      and e.beginDate between #{beginDateScope[0]} and #{beginDateScope[1]}
    </if>
  </where>
  </select>
  <delete id="deleteByIds" parameterType="java.lang.Integer">
    delete from employee where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="addEmps">
    insert into employee(name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, school, beginDate, workID, contractTerm, conversionTime, notWorkDate, beginContract, endContract, workAge)
    values
    <foreach collection="list" separator="," item="emp">
      (#{emp.name,jdbcType=VARCHAR}, #{emp.gender,jdbcType=CHAR},
      #{emp.birthday,jdbcType=DATE}, #{emp.idCard,jdbcType=CHAR}, #{emp.wedlock,jdbcType=CHAR},
      #{emp.nationId,jdbcType=INTEGER},
      #{emp.nativePlace,jdbcType=VARCHAR}, #{emp.politicId,jdbcType=INTEGER}, #{emp.email,jdbcType=VARCHAR},
      #{emp.phone,jdbcType=VARCHAR}, #{emp.address,jdbcType=VARCHAR}, #{emp.departmentId,jdbcType=INTEGER},
      #{emp.jobLevelId,jdbcType=INTEGER}, #{emp.posId,jdbcType=INTEGER}, #{emp.engageForm,jdbcType=VARCHAR},
      #{emp.tiptopDegree,jdbcType=CHAR}, #{emp.specialty,jdbcType=VARCHAR}, #{emp.school,jdbcType=VARCHAR},
      #{emp.beginDate,jdbcType=DATE}, #{emp.workState,jdbcType=CHAR}, #{emp.workID,jdbcType=CHAR},
      #{emp.contractTerm,jdbcType=DOUBLE}, #{emp.conversionTime,jdbcType=DATE}, #{emp.notWorkDate,jdbcType=DATE},
      #{emp.beginContract,jdbcType=DATE}, #{emp.endContract,jdbcType=DATE}, #{emp.workAge,jdbcType=INTEGER}
    </foreach>
  </insert>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.vhr.end.model.Employee" useGeneratedKeys="true">
    insert into employee (`name`, gender, birthday, 
      idCard, wedlock, nationId, 
      nativePlace, politicId, email, 
      phone, address, departmentId, 
      jobLevelId, posId, engageForm, 
      tiptopDegree, specialty, school, 
      beginDate, workState, workID, 
      contractTerm, conversionTime, notWorkDate, 
      beginContract, endContract, workAge
      )
    values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, 
      #{idcard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationid,jdbcType=INTEGER}, 
      #{nativeplace,jdbcType=VARCHAR}, #{politicid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentid,jdbcType=INTEGER}, 
      #{joblevelid,jdbcType=INTEGER}, #{posid,jdbcType=INTEGER}, #{engageform,jdbcType=VARCHAR}, 
      #{tiptopdegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{begindate,jdbcType=DATE}, #{workstate,jdbcType=CHAR}, #{workid,jdbcType=CHAR}, 
      #{contractterm,jdbcType=DOUBLE}, #{conversiontime,jdbcType=DATE}, #{notworkdate,jdbcType=DATE}, 
      #{begincontract,jdbcType=DATE}, #{endcontract,jdbcType=DATE}, #{workage,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.vhr.end.model.Employee" useGeneratedKeys="true">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="wedlock != null">
        wedlock,
      </if>
      <if test="nationid != null">
        nationId,
      </if>
      <if test="nativeplace != null">
        nativePlace,
      </if>
      <if test="politicid != null">
        politicId,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="joblevelid != null">
        jobLevelId,
      </if>
      <if test="posid != null">
        posId,
      </if>
      <if test="engageform != null">
        engageForm,
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="begindate != null">
        beginDate,
      </if>
      <if test="workstate != null">
        workState,
      </if>
      <if test="workid != null">
        workID,
      </if>
      <if test="contractterm != null">
        contractTerm,
      </if>
      <if test="conversiontime != null">
        conversionTime,
      </if>
      <if test="notworkdate != null">
        notWorkDate,
      </if>
      <if test="begincontract != null">
        beginContract,
      </if>
      <if test="endcontract != null">
        endContract,
      </if>
      <if test="workage != null">
        workAge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null">
        #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null">
        #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        #{workage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.vhr.end.model.Employee">
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="idcard != null">
        idCard = #{idcard,jdbcType=CHAR},
      </if>
      <if test="wedlock != null">
        wedlock = #{wedlock,jdbcType=CHAR},
      </if>
      <if test="nationid != null">
        nationId = #{nationid,jdbcType=INTEGER},
      </if>
      <if test="nativeplace != null">
        nativePlace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="politicid != null">
        politicId = #{politicid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="joblevelid != null">
        jobLevelId = #{joblevelid,jdbcType=INTEGER},
      </if>
      <if test="posid != null">
        posId = #{posid,jdbcType=INTEGER},
      </if>
      <if test="engageform != null">
        engageForm = #{engageform,jdbcType=VARCHAR},
      </if>
      <if test="tiptopdegree != null">
        tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        beginDate = #{begindate,jdbcType=DATE},
      </if>
      <if test="workstate != null">
        workState = #{workstate,jdbcType=CHAR},
      </if>
      <if test="workid != null">
        workID = #{workid,jdbcType=CHAR},
      </if>
      <if test="contractterm != null">
        contractTerm = #{contractterm,jdbcType=DOUBLE},
      </if>
      <if test="conversiontime != null">
        conversionTime = #{conversiontime,jdbcType=DATE},
      </if>
      <if test="notworkdate != null">
        notWorkDate = #{notworkdate,jdbcType=DATE},
      </if>
      <if test="begincontract != null">
        beginContract = #{begincontract,jdbcType=DATE},
      </if>
      <if test="endcontract != null">
        endContract = #{endcontract,jdbcType=DATE},
      </if>
      <if test="workage != null">
        workAge = #{workage,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.vhr.end.model.Employee">
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idcard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationid,jdbcType=INTEGER},
      nativePlace = #{nativeplace,jdbcType=VARCHAR},
      politicId = #{politicid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentid,jdbcType=INTEGER},
      jobLevelId = #{joblevelid,jdbcType=INTEGER},
      posId = #{posid,jdbcType=INTEGER},
      engageForm = #{engageform,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopdegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{begindate,jdbcType=DATE},
      workState = #{workstate,jdbcType=CHAR},
      workID = #{workid,jdbcType=CHAR},
      contractTerm = #{contractterm,jdbcType=DOUBLE},
      conversionTime = #{conversiontime,jdbcType=DATE},
      notWorkDate = #{notworkdate,jdbcType=DATE},
      beginContract = #{begincontract,jdbcType=DATE},
      endContract = #{endcontract,jdbcType=DATE},
      workAge = #{workage,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>